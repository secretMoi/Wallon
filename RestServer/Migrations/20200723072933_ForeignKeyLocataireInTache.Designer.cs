// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestServer.Data;

namespace RestServer.Migrations
{
    [DbContext(typeof(WallonsContext))]
    [Migration("20200723072933_ForeignKeyLocataireInTache")]
    partial class ForeignKeyLocataireInTache
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Models.LiaisonTacheLocataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocataireId")
                        .HasColumnType("int");

                    b.Property<int>("TacheId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocataireId");

                    b.HasIndex("TacheId");

                    b.ToTable("LiaisonTachesLocataires");
                });

            modelBuilder.Entity("Models.Models.Locataire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actif")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Locataires");
                });

            modelBuilder.Entity("Models.Models.Tache", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Cycle")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatteFin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocataireId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocataireId");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("Models.Models.LiaisonTacheLocataire", b =>
                {
                    b.HasOne("Models.Models.Locataire", "Locataire")
                        .WithMany()
                        .HasForeignKey("LocataireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.Tache", "Tache")
                        .WithMany()
                        .HasForeignKey("TacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Models.Tache", b =>
                {
                    b.HasOne("Models.Models.Locataire", "Locataire")
                        .WithMany()
                        .HasForeignKey("LocataireId");
                });
#pragma warning restore 612, 618
        }
    }
}
